{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97254\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\Python\\\\SimuTrader\\\\SimuTrader\\\\frontend\\\\src\\\\components\\\\BitcoinChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { getChartOptions } from \"./chartOptions\";\nimport \"./BitcoinChart.css\";\nimport ChartToolbar from \"./ChartToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BitcoinChart = () => {\n  _s();\n  const chartComponent = useRef(null);\n  const [chartOptions, setChartOptions] = useState({});\n  useEffect(() => {\n    fetch(\"https://demo-live-data.highcharts.com/aapl-ohlcv.json\").then(response => response.json()).then(data => {\n      const ohlcData = [];\n      const volumeData = [];\n      data.forEach(item => {\n        ohlcData.push([item[0], item[1], item[2], item[3], item[4]]);\n        volumeData.push([item[0], item[5]]);\n      });\n      setChartOptions(getChartOptions(ohlcData, volumeData));\n    });\n  }, []);\n  const handleChartTypeChange = type => {\n    const newOptions = {\n      ...chartOptions\n    };\n    newOptions.series[0].type = type;\n    setChartOptions(newOptions);\n  };\n  const handleAddTrendline = () => {\n    const newOptions = {\n      ...chartOptions\n    };\n    newOptions.series.push({\n      type: \"line\",\n      name: \"Trendline\",\n      data: chartOptions.series[0].data.map((point, index) => {\n        // Example trendline: y = ax + b where a and b are constants\n        const a = 0.0001; // slope\n        const b = chartOptions.series[0].data[0][4]; // intercept\n        return [point[0], a * index + b];\n      }),\n      color: \"red\",\n      dashStyle: \"Dash\"\n    });\n    setChartOptions(newOptions);\n  };\n  const handleShowIndicators = () => {\n    const newOptions = {\n      ...chartOptions\n    };\n    newOptions.series.push({\n      type: \"sma\",\n      linkedTo: \"aapl-ohlc\",\n      name: \"SMA\",\n      params: {\n        period: 14\n      },\n      color: \"blue\"\n    });\n    setChartOptions(newOptions);\n  };\n  const handleHideIndicators = () => {\n    const newOptions = {\n      ...chartOptions\n    };\n    newOptions.series = newOptions.series.filter(series => series.type !== \"sma\");\n    setChartOptions(newOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(ChartToolbar, {\n      onChartTypeChange: handleChartTypeChange,\n      onAddTrendline: handleAddTrendline,\n      onShowIndicators: handleShowIndicators,\n      onHideIndicators: handleHideIndicators\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      constructorType: \"stockChart\",\n      options: chartOptions,\n      ref: chartComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(BitcoinChart, \"PvJP6q7PNlTEC3Q2nJmfiT3EqpU=\");\n_c = BitcoinChart;\nexport default BitcoinChart;\nvar _c;\n$RefreshReg$(_c, \"BitcoinChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Highcharts","HighchartsReact","getChartOptions","ChartToolbar","jsxDEV","_jsxDEV","BitcoinChart","_s","chartComponent","chartOptions","setChartOptions","fetch","then","response","json","data","ohlcData","volumeData","forEach","item","push","handleChartTypeChange","type","newOptions","series","handleAddTrendline","name","map","point","index","a","b","color","dashStyle","handleShowIndicators","linkedTo","params","period","handleHideIndicators","filter","className","children","onChartTypeChange","onAddTrendline","onShowIndicators","onHideIndicators","fileName","_jsxFileName","lineNumber","columnNumber","highcharts","constructorType","options","ref","_c","$RefreshReg$"],"sources":["C:/Users/97254/OneDrive/שולחן העבודה/לימודים/Python/SimuTrader/SimuTrader/frontend/src/components/BitcoinChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { getChartOptions } from \"./chartOptions\";\r\nimport \"./BitcoinChart.css\";\r\nimport ChartToolbar from \"./ChartToolbar\";\r\n\r\nconst BitcoinChart = () => {\r\n  const chartComponent = useRef(null);\r\n  const [chartOptions, setChartOptions] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://demo-live-data.highcharts.com/aapl-ohlcv.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const ohlcData = [];\r\n        const volumeData = [];\r\n\r\n        data.forEach((item) => {\r\n          ohlcData.push([item[0], item[1], item[2], item[3], item[4]]);\r\n          volumeData.push([item[0], item[5]]);\r\n        });\r\n\r\n        setChartOptions(getChartOptions(ohlcData, volumeData));\r\n      });\r\n  }, []);\r\n\r\n  const handleChartTypeChange = (type) => {\r\n    const newOptions = { ...chartOptions };\r\n    newOptions.series[0].type = type;\r\n    setChartOptions(newOptions);\r\n  };\r\n\r\n  const handleAddTrendline = () => {\r\n    const newOptions = { ...chartOptions };\r\n    newOptions.series.push({\r\n      type: \"line\",\r\n      name: \"Trendline\",\r\n      data: chartOptions.series[0].data.map((point, index) => {\r\n        // Example trendline: y = ax + b where a and b are constants\r\n        const a = 0.0001; // slope\r\n        const b = chartOptions.series[0].data[0][4]; // intercept\r\n        return [point[0], a * index + b];\r\n      }),\r\n      color: \"red\",\r\n      dashStyle: \"Dash\",\r\n    });\r\n    setChartOptions(newOptions);\r\n  };\r\n\r\n  const handleShowIndicators = () => {\r\n    const newOptions = { ...chartOptions };\r\n    newOptions.series.push({\r\n      type: \"sma\",\r\n      linkedTo: \"aapl-ohlc\",\r\n      name: \"SMA\",\r\n      params: {\r\n        period: 14,\r\n      },\r\n      color: \"blue\",\r\n    });\r\n    setChartOptions(newOptions);\r\n  };\r\n\r\n  const handleHideIndicators = () => {\r\n    const newOptions = { ...chartOptions };\r\n    newOptions.series = newOptions.series.filter(\r\n      (series) => series.type !== \"sma\"\r\n    );\r\n    setChartOptions(newOptions);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <ChartToolbar\r\n        onChartTypeChange={handleChartTypeChange}\r\n        onAddTrendline={handleAddTrendline}\r\n        onShowIndicators={handleShowIndicators}\r\n        onHideIndicators={handleHideIndicators}\r\n      />\r\n      <HighchartsReact\r\n        highcharts={Highcharts}\r\n        constructorType={\"stockChart\"}\r\n        options={chartOptions}\r\n        ref={chartComponent}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitcoinChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}