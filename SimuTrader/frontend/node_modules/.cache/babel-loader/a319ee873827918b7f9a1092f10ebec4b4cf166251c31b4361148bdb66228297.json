{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97254\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\Python\\\\SimuTrader\\\\SimuTrader\\\\frontend\\\\src\\\\components\\\\BitcoinChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BitcoinChart = () => {\n  _s();\n  const [chartOptions, setChartOptions] = useState({\n    title: {\n      text: \"Bitcoin Price\"\n    },\n    xAxis: {\n      type: \"datetime\"\n    },\n    series: [{\n      name: \"Bitcoin Price\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    const fetchBitcoinData = async () => {\n      try {\n        const response = await axios.get(\"https://www.alphavantage.co/query\", {\n          params: {\n            function: \"DIGITAL_CURRENCY_INTRADAY\",\n            symbol: \"BTC\",\n            market: \"USD\",\n            apikey: \"CZ8X40Q1W69GQGKB\" // החלף ב-API Key שלך\n          }\n        });\n        const data = response.data[\"Time Series (Digital Currency Intraday)\"];\n        const prices = Object.keys(data).map(time => [new Date(time).getTime(), parseFloat(data[time][\"1a. price (USD)\"])]);\n        setChartOptions({\n          series: [{\n            name: \"Bitcoin Price\",\n            data: prices\n          }]\n        });\n      } catch (error) {\n        console.error(\"Error fetching Bitcoin data:\", error);\n      }\n    };\n    fetchBitcoinData();\n    const interval = setInterval(fetchBitcoinData, 60000); // עדכון כל דקה\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(HighchartsReact, {\n    highcharts: Highcharts,\n    options: chartOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_s(BitcoinChart, \"U/LEFNQ2v3WMWkZ9bsXPGQTQF7E=\");\n_c = BitcoinChart;\nexport default BitcoinChart;\nvar _c;\n$RefreshReg$(_c, \"BitcoinChart\");","map":{"version":3,"names":["React","useEffect","useState","Highcharts","HighchartsReact","axios","jsxDEV","_jsxDEV","BitcoinChart","_s","chartOptions","setChartOptions","title","text","xAxis","type","series","name","data","fetchBitcoinData","response","get","params","function","symbol","market","apikey","prices","Object","keys","map","time","Date","getTime","parseFloat","error","console","interval","setInterval","clearInterval","highcharts","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/97254/OneDrive/שולחן העבודה/לימודים/Python/SimuTrader/SimuTrader/frontend/src/components/BitcoinChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport axios from \"axios\";\r\n\r\nconst BitcoinChart = () => {\r\n  const [chartOptions, setChartOptions] = useState({\r\n    title: {\r\n      text: \"Bitcoin Price\",\r\n    },\r\n    xAxis: {\r\n      type: \"datetime\",\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Bitcoin Price\",\r\n        data: [],\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchBitcoinData = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://www.alphavantage.co/query\", {\r\n          params: {\r\n            function: \"DIGITAL_CURRENCY_INTRADAY\",\r\n            symbol: \"BTC\",\r\n            market: \"USD\",\r\n            apikey: \"CZ8X40Q1W69GQGKB\", // החלף ב-API Key שלך\r\n          },\r\n        });\r\n\r\n        const data = response.data[\"Time Series (Digital Currency Intraday)\"];\r\n        const prices = Object.keys(data).map((time) => [\r\n          new Date(time).getTime(),\r\n          parseFloat(data[time][\"1a. price (USD)\"]),\r\n        ]);\r\n\r\n        setChartOptions({\r\n          series: [\r\n            {\r\n              name: \"Bitcoin Price\",\r\n              data: prices,\r\n            },\r\n          ],\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching Bitcoin data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchBitcoinData();\r\n    const interval = setInterval(fetchBitcoinData, 60000); // עדכון כל דקה\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return <HighchartsReact highcharts={Highcharts} options={chartOptions} />;\r\n};\r\n\r\nexport default BitcoinChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC;IAC/CU,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,MAAM,EAAE,CACN;MACEC,IAAI,EAAE,eAAe;MACrBC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC,CAAC;EAEFjB,SAAS,CAAC,MAAM;IACd,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,mCAAmC,EAAE;UACpEC,MAAM,EAAE;YACNC,QAAQ,EAAE,2BAA2B;YACrCC,MAAM,EAAE,KAAK;YACbC,MAAM,EAAE,KAAK;YACbC,MAAM,EAAE,kBAAkB,CAAE;UAC9B;QACF,CAAC,CAAC;QAEF,MAAMR,IAAI,GAAGE,QAAQ,CAACF,IAAI,CAAC,yCAAyC,CAAC;QACrE,MAAMS,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACX,IAAI,CAAC,CAACY,GAAG,CAAEC,IAAI,IAAK,CAC7C,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,OAAO,CAAC,CAAC,EACxBC,UAAU,CAAChB,IAAI,CAACa,IAAI,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAC1C,CAAC;QAEFpB,eAAe,CAAC;UACdK,MAAM,EAAE,CACN;YACEC,IAAI,EAAE,eAAe;YACrBC,IAAI,EAAES;UACR,CAAC;QAEL,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDhB,gBAAgB,CAAC,CAAC;IAClB,MAAMkB,QAAQ,GAAGC,WAAW,CAACnB,gBAAgB,EAAE,KAAK,CAAC,CAAC,CAAC;IACvD,OAAO,MAAMoB,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO9B,OAAA,CAACH,eAAe;IAACoC,UAAU,EAAErC,UAAW;IAACsC,OAAO,EAAE/B;EAAa;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E,CAAC;AAACpC,EAAA,CArDID,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AAuDlB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}