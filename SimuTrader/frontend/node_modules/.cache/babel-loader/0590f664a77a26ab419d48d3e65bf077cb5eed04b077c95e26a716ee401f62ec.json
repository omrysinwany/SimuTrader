{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97254\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\Python\\\\SimuTrader\\\\SimuTrader\\\\frontend\\\\src\\\\components\\\\BitcoinChart.js\",\n  _s = $RefreshSig$();\n// BitcoinChart.js\nimport React, { useEffect, useState } from \"react\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BitcoinChart = () => {\n  _s();\n  const [chartOptions, setChartOptions] = useState({});\n  useEffect(() => {\n    const fetchBitcoinData = async () => {\n      const colorTemplate = \"{#ge point.open point.close}#ff6e6e{else}#51af7b{/ge}\";\n      const data = await fetch(\"https://demo-live-data.highcharts.com/aapl-ohlcv.json\").then(response => response.json());\n\n      // split the data set into ohlc and volume\n      const ohlc = [],\n        volume = [],\n        dataLength = data.length;\n      for (let i = 0; i < dataLength; i += 1) {\n        ohlc.push([data[i][0],\n        // the date\n        data[i][1],\n        // open\n        data[i][2],\n        // high\n        data[i][3],\n        // low\n        data[i][4] // close\n        ]);\n        volume.push([data[i][0],\n        // the date\n        data[i][5], data[i][1] < data[i][4] ? \"highcharts-point-up\" : \"highcharts-point-down\" // the volume\n        ]);\n      }\n      setChartOptions({\n        lang: {\n          accessibility: {\n            defaultChartTitle: \"AAPL Stock Price\"\n          }\n        },\n        xAxis: {\n          crosshair: {\n            className: \"highcharts-crosshair-custom\",\n            enabled: true\n          }\n        },\n        yAxis: [{\n          title: {\n            text: \"price (USD)\"\n          },\n          crosshair: {\n            snap: false,\n            className: \"highcharts-crosshair-custom\",\n            label: {\n              className: \"highcharts-crosshair-custom-label\",\n              enabled: true,\n              format: \"{value:.2f}\"\n            },\n            enabled: true\n          },\n          labels: {\n            align: \"left\"\n          },\n          height: \"70%\"\n        }, {\n          title: {\n            text: \"volume\"\n          },\n          crosshair: {\n            className: \"highcharts-crosshair-custom\",\n            snap: false,\n            enabled: true,\n            label: {\n              format: \"{#if value ge 1000000} {(divide value 1000000):.2f} \" + \"M {else} {value} {/if}\",\n              className: \"highcharts-crosshair-custom-label\",\n              enabled: true\n            }\n          },\n          labels: {\n            align: \"left\"\n          },\n          top: \"70%\",\n          height: \"30%\",\n          offset: 0\n        }],\n        chart: {\n          styledMode: true\n        },\n        tooltip: {\n          shape: \"square\",\n          split: false,\n          shared: true,\n          headerShape: \"callout\",\n          shadow: false,\n          format: `<span style=\"font-size: 1.4em\">{point.series.name}</span>\nO<span style=\"color:${colorTemplate}\";>{point.open}</span>\nH<span style=\"color:${colorTemplate}\";>{point.high}</span>\nL<span style=\"color:${colorTemplate}\";>{point.low}</span>\nC<span style=\"color:${colorTemplate}\";>{point.close}\n{(subtract point.open point.close):.2f}\n{(multiply (divide (subtract point.open point.close) point.close) 100):.2f}%\n</span>\n<br>\nVolume<span style=\"color:${colorTemplate}\";>{points.1.y}</span>`,\n          positioner: () => ({\n            x: 60,\n            y: 0\n          })\n        },\n        series: [{\n          type: \"candlestick\",\n          id: \"aapl-ohlc\",\n          name: \"AAPL Stock Price\",\n          lastPrice: {\n            enabled: true,\n            label: {\n              enabled: true,\n              align: \"left\",\n              x: 8\n            }\n          },\n          data: ohlc\n        }, {\n          type: \"column\",\n          lastPrice: {\n            enabled: true,\n            label: {\n              format: \"{#if value ge 1000000} \" + \"{(divide value 1000000):.2f} M {else} {value} {/if}\",\n              enabled: true,\n              align: \"left\",\n              x: 8\n            }\n          },\n          keys: [\"x\", \"y\", \"className\"],\n          id: \"aapl-volume\",\n          name: \"AAPL Volume\",\n          data: volume,\n          yAxis: 1\n        }],\n        rangeSelector: {\n          verticalAlign: \"bottom\"\n        },\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 800\n            },\n            chartOptions: {\n              rangeSelector: {\n                inputEnabled: false\n              }\n            }\n          }]\n        }\n      });\n    };\n    fetchBitcoinData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Price Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      constructorType: \"stockChart\",\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(BitcoinChart, \"fv6KnzSiptE7es9ANfZo/pjNm0M=\");\n_c = BitcoinChart;\nexport default BitcoinChart;\nvar _c;\n$RefreshReg$(_c, \"BitcoinChart\");","map":{"version":3,"names":["React","useEffect","useState","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","BitcoinChart","_s","chartOptions","setChartOptions","fetchBitcoinData","colorTemplate","data","fetch","then","response","json","ohlc","volume","dataLength","length","i","push","lang","accessibility","defaultChartTitle","xAxis","crosshair","className","enabled","yAxis","title","text","snap","label","format","labels","align","height","top","offset","chart","styledMode","tooltip","shape","split","shared","headerShape","shadow","positioner","x","y","series","type","id","name","lastPrice","keys","rangeSelector","verticalAlign","responsive","rules","condition","maxWidth","inputEnabled","children","fileName","_jsxFileName","lineNumber","columnNumber","highcharts","constructorType","options","_c","$RefreshReg$"],"sources":["C:/Users/97254/OneDrive/שולחן העבודה/לימודים/Python/SimuTrader/SimuTrader/frontend/src/components/BitcoinChart.js"],"sourcesContent":["// BitcoinChart.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nconst BitcoinChart = () => {\r\n  const [chartOptions, setChartOptions] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchBitcoinData = async () => {\r\n      const colorTemplate =\r\n        \"{#ge point.open point.close}#ff6e6e{else}#51af7b{/ge}\";\r\n      const data = await fetch(\r\n        \"https://demo-live-data.highcharts.com/aapl-ohlcv.json\"\r\n      ).then((response) => response.json());\r\n\r\n      // split the data set into ohlc and volume\r\n      const ohlc = [],\r\n        volume = [],\r\n        dataLength = data.length;\r\n\r\n      for (let i = 0; i < dataLength; i += 1) {\r\n        ohlc.push([\r\n          data[i][0], // the date\r\n          data[i][1], // open\r\n          data[i][2], // high\r\n          data[i][3], // low\r\n          data[i][4], // close\r\n        ]);\r\n\r\n        volume.push([\r\n          data[i][0], // the date\r\n          data[i][5],\r\n          data[i][1] < data[i][4]\r\n            ? \"highcharts-point-up\"\r\n            : \"highcharts-point-down\", // the volume\r\n        ]);\r\n      }\r\n\r\n      setChartOptions({\r\n        lang: {\r\n          accessibility: {\r\n            defaultChartTitle: \"AAPL Stock Price\",\r\n          },\r\n        },\r\n        xAxis: {\r\n          crosshair: {\r\n            className: \"highcharts-crosshair-custom\",\r\n            enabled: true,\r\n          },\r\n        },\r\n        yAxis: [\r\n          {\r\n            title: {\r\n              text: \"price (USD)\",\r\n            },\r\n            crosshair: {\r\n              snap: false,\r\n              className: \"highcharts-crosshair-custom\",\r\n              label: {\r\n                className: \"highcharts-crosshair-custom-label\",\r\n                enabled: true,\r\n                format: \"{value:.2f}\",\r\n              },\r\n              enabled: true,\r\n            },\r\n            labels: {\r\n              align: \"left\",\r\n            },\r\n            height: \"70%\",\r\n          },\r\n          {\r\n            title: {\r\n              text: \"volume\",\r\n            },\r\n            crosshair: {\r\n              className: \"highcharts-crosshair-custom\",\r\n              snap: false,\r\n              enabled: true,\r\n              label: {\r\n                format:\r\n                  \"{#if value ge 1000000} {(divide value 1000000):.2f} \" +\r\n                  \"M {else} {value} {/if}\",\r\n                className: \"highcharts-crosshair-custom-label\",\r\n                enabled: true,\r\n              },\r\n            },\r\n            labels: {\r\n              align: \"left\",\r\n            },\r\n            top: \"70%\",\r\n            height: \"30%\",\r\n            offset: 0,\r\n          },\r\n        ],\r\n        chart: {\r\n          styledMode: true,\r\n        },\r\n        tooltip: {\r\n          shape: \"square\",\r\n          split: false,\r\n          shared: true,\r\n          headerShape: \"callout\",\r\n          shadow: false,\r\n          format: `<span style=\"font-size: 1.4em\">{point.series.name}</span>\r\nO<span style=\"color:${colorTemplate}\";>{point.open}</span>\r\nH<span style=\"color:${colorTemplate}\";>{point.high}</span>\r\nL<span style=\"color:${colorTemplate}\";>{point.low}</span>\r\nC<span style=\"color:${colorTemplate}\";>{point.close}\r\n{(subtract point.open point.close):.2f}\r\n{(multiply (divide (subtract point.open point.close) point.close) 100):.2f}%\r\n</span>\r\n<br>\r\nVolume<span style=\"color:${colorTemplate}\";>{points.1.y}</span>`,\r\n          positioner: () => ({ x: 60, y: 0 }),\r\n        },\r\n        series: [\r\n          {\r\n            type: \"candlestick\",\r\n            id: \"aapl-ohlc\",\r\n            name: \"AAPL Stock Price\",\r\n            lastPrice: {\r\n              enabled: true,\r\n              label: {\r\n                enabled: true,\r\n                align: \"left\",\r\n                x: 8,\r\n              },\r\n            },\r\n            data: ohlc,\r\n          },\r\n          {\r\n            type: \"column\",\r\n            lastPrice: {\r\n              enabled: true,\r\n              label: {\r\n                format:\r\n                  \"{#if value ge 1000000} \" +\r\n                  \"{(divide value 1000000):.2f} M {else} {value} {/if}\",\r\n                enabled: true,\r\n                align: \"left\",\r\n                x: 8,\r\n              },\r\n            },\r\n            keys: [\"x\", \"y\", \"className\"],\r\n            id: \"aapl-volume\",\r\n            name: \"AAPL Volume\",\r\n            data: volume,\r\n            yAxis: 1,\r\n          },\r\n        ],\r\n        rangeSelector: {\r\n          verticalAlign: \"bottom\",\r\n        },\r\n        responsive: {\r\n          rules: [\r\n            {\r\n              condition: {\r\n                maxWidth: 800,\r\n              },\r\n              chartOptions: {\r\n                rangeSelector: {\r\n                  inputEnabled: false,\r\n                },\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      });\r\n    };\r\n\r\n    fetchBitcoinData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Bitcoin Price Chart</h1>\r\n      <HighchartsReact\r\n        highcharts={Highcharts}\r\n        constructorType={\"stockChart\"}\r\n        options={chartOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitcoinChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}