{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97254\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\\\u05DC\\u05D9\\u05DE\\u05D5\\u05D3\\u05D9\\u05DD\\\\Python\\\\SimuTrader\\\\SimuTrader\\\\frontend\\\\src\\\\components\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8000/api/register/\", {\n        username: username,\n        email: email,\n        password: password\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"qXzfcSnOp7L14Dddg986jK2+oO8=\");\n_c = RegisterForm;\nexport default RegisterForm;\n\n// import React, { useState } from \"react\";\n// import { Button, Form, Container, Card } from \"react-bootstrap\";\n// import \"./Auth.css\";\n\n// const RegisterForm = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\"http://localhost:8000/register/\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({ username, password, email }),\n//       });\n\n//       if (response.ok) {\n//         window.location.href = \"/login\"; // Redirect to login page\n//       } else {\n//         const data = await response.json();\n//         setError(data.username || data.email || data.password);\n//       }\n//     } catch (error) {\n//       setError(\"An error occurred\");\n//     }\n//   };\n\n//   return (\n//     <Container className=\"my-4\">\n//       <Card className=\"auth-card\">\n//         <Card.Body>\n//           <h2 className=\"text-center\">Register</h2>\n//           <Form onSubmit={handleSubmit}>\n//             <Form.Group className=\"mb-3\">\n//               <Form.Label>Username</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 placeholder=\"Enter username\"\n//                 value={username}\n//                 onChange={(e) => setUsername(e.target.value)}\n//                 className=\"auth-input\"\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\">\n//               <Form.Label>Email</Form.Label>\n//               <Form.Control\n//                 type=\"email\"\n//                 placeholder=\"Enter email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 className=\"auth-input\"\n//               />\n//             </Form.Group>\n//             <Form.Group className=\"mb-3\">\n//               <Form.Label>Password</Form.Label>\n//               <Form.Control\n//                 type=\"password\"\n//                 placeholder=\"Enter password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 className=\"auth-input\"\n//               />\n//             </Form.Group>\n//             {error && <p className=\"text-danger\">{error}</p>}\n//             <Button variant=\"primary\" type=\"submit\" className=\"w-100 auth-btn\">\n//               Register\n//             </Button>\n//           </Form>\n//         </Card.Body>\n//       </Card>\n//     </Container>\n//   );\n// };\n\n// export default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RegisterForm","_s","username","setUsername","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","response","post","console","log","data","error","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/97254/OneDrive/שולחן העבודה/לימודים/Python/SimuTrader/SimuTrader/frontend/src/components/RegisterForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/api/register/\", {\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      });\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Button, Form, Container, Card } from \"react-bootstrap\";\r\n// import \"./Auth.css\";\r\n\r\n// const RegisterForm = () => {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:8000/register/\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({ username, password, email }),\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         window.location.href = \"/login\"; // Redirect to login page\r\n//       } else {\r\n//         const data = await response.json();\r\n//         setError(data.username || data.email || data.password);\r\n//       }\r\n//     } catch (error) {\r\n//       setError(\"An error occurred\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Container className=\"my-4\">\r\n//       <Card className=\"auth-card\">\r\n//         <Card.Body>\r\n//           <h2 className=\"text-center\">Register</h2>\r\n//           <Form onSubmit={handleSubmit}>\r\n//             <Form.Group className=\"mb-3\">\r\n//               <Form.Label>Username</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"text\"\r\n//                 placeholder=\"Enter username\"\r\n//                 value={username}\r\n//                 onChange={(e) => setUsername(e.target.value)}\r\n//                 className=\"auth-input\"\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\">\r\n//               <Form.Label>Email</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"email\"\r\n//                 placeholder=\"Enter email\"\r\n//                 value={email}\r\n//                 onChange={(e) => setEmail(e.target.value)}\r\n//                 className=\"auth-input\"\r\n//               />\r\n//             </Form.Group>\r\n//             <Form.Group className=\"mb-3\">\r\n//               <Form.Label>Password</Form.Label>\r\n//               <Form.Control\r\n//                 type=\"password\"\r\n//                 placeholder=\"Enter password\"\r\n//                 value={password}\r\n//                 onChange={(e) => setPassword(e.target.value)}\r\n//                 className=\"auth-input\"\r\n//               />\r\n//             </Form.Group>\r\n//             {error && <p className=\"text-danger\">{error}</p>}\r\n//             <Button variant=\"primary\" type=\"submit\" className=\"w-100 auth-btn\">\r\n//               Register\r\n//             </Button>\r\n//           </Form>\r\n//         </Card.Body>\r\n//       </Card>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}